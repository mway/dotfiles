#!/usr/bin/env bash
# global cache {{ .cache.global }}

source "$(chezmoi source-path)/scripts/utils.sh"

{{- $fzf := quote (print .paths.local.bin "/fzf") }}
{{- $version := .versions.fzf }}
{{- $tarDir := printf "fzf-%s-%s_%s" $version .os .arch }}
{{- $remoteFile := "" }}
{{- $command := "" }}
{{- if eq "darwin" .os }}
{{- $remoteFile = printf "fzf-%s-%s_%s.zip" $version .os .arch }}
{{- $command = printf "unzip %s -d %s" (quote $remoteFile) (quote .paths.local.bin) }}
{{- else }}
{{- $remoteFile = printf "fzf-%s-%s_%s.tar.gz" $version .os .arch }}
{{- $command = printf "tar -C %s -zxf %s" (quote .paths.local.bin) (quote $remoteFile) }}
{{- end }}
{{- $url := quote (printf "https://github.com/junegunn/fzf/releases/download/%s/%s" $version $remoteFile) }}

_fzf() {
  local updated=0

  if [[ "$({{ $fzf }} --version 2>/dev/null || true)" == "{{ $version }}*" ]]; then
    updated=1
  fi

  if [ $updated -eq 0 ]; then
    local SANDBOX="$(mktemp -d)"
    trap 'rm -rf "$SANDBOX"' EXIT
    cd "$SANDBOX"

    echo curl -sLO {{ $url }} 1>&2
    curl -sLO {{ $url }}
    echo {{ $command }} 1>&2
    {{ $command }}
    chmod +x {{ $fzf }}
  fi
}

_manage fzf _fzf
