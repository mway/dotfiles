---
- hosts: all
  connection: ssh
  strategy: free
  gather_facts: yes

  vars:
    dist: '{{ ansible_distribution_release }}'
    path: /home/mway/.cargo/bin:/home/mway/go/bin:/usr/local/go/bin:/home/mway/.local/bin:/home/mway/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin

  environment:
    PATH: '{{ path }}'

  tasks:
    - name: Configuration
      become: yes
      block:
        - name: Config > copy tools
          copy:
            src: usr_local_bin/
            dest: /usr/local/bin/
            mode: preserve
      tags:
        - config

    - name: Environment
      become: yes
      block:
        - name: /etc/profile.d/zz_mway_paths.sh
          copy:
            dest: /etc/profile.d/zz_mway_paths.sh
            content: |
              export PATH="{{ path }}"
            owner: root
            group: root
            mode: '0755'
      tags:
        - config

    - name: apt > install/update packages
      become: yes
      apt:
        pkg:
          # General
          - build-essential
          - clang-14
          - clang-format-14
          - cmake
          - cron
          - curl
          - exa
          - fasd
          - git
          - jq
          - lcov
          - libtool-bin
          - ninja-build
          - pandoc
          - pipenv
          - pipx
          - pv
          - python3
          - ripgrep
          - shellcheck
          - silversearcher-ag
          - snapd
          - stow
          - tig
          # Docker
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          # tmux
          - autotools-dev
          - pkg-config
          - bison
          - libevent-dev
          - libncurses-dev
        state: latest
        allow_unauthenticated: yes
        install_recommends: yes
        update_cache: yes
        autoremove: yes
      tags:
        - config
        - packages

    - name: Tailscale
      block:
        - name: Tailscale > add apt key
          become: yes
          get_url:
            url: 'https://pkgs.tailscale.com/stable/ubuntu/{{ dist }}.noarmor.gpg'
            checksum: sha256:3e03dacf222698c60b8e2f990b809ca1b3e104de127767864284e6c228f1fb39
            dest: /usr/share/keyrings/tailscale-archive-keyring.gpg
        - name: Tailscale > add apt sources
          become: yes
          get_url:
            url: 'https://pkgs.tailscale.com/stable/ubuntu/{{ dist }}.tailscale-keyring.list'
            checksum: sha256:e0acc200aebb45a3d67b4b66524100f8c1f4497866958654798fc4ba09d49f3f
            dest: /etc/apt/sources.list.d/tailscale.list
        - name: Tailscale > install or update
          become: yes
          apt:
            pkg:
              - tailscale
            state: latest
            update_cache: yes
      tags:
        - extra

    - name: NextDNS
      block:
        - name: NextDNS > check presence
          command: nextdns version
          changed_when: no
      rescue:
        - name: NextDNS > preflight
          file:
            path: /tmp/nextdns-install
            state: absent
        - name: NextDNS > download
          get_url:
            url: https://nextdns.io/install
            dest: /tmp/nextdns-install
            mode: '0755'
        - name: NextDNS > install
          shell: echo | /tmp/nextdns-install
      always:
        - name: NextDNS > cleanup
          file:
            path: /tmp/nextdns-install
            state: absent

    - name: dnsmasq
      block:
        - name: dnsmasq > install or update
          become: yes
          apt:
            pkg:
              - dnsmasq
              - dnsmasq-utils
      tags:
        - extra

    - name: Docker
      become: yes
      block:
        - name: Docker > add apt key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            id: 0EBFCD88
        - name: Docker > add apt repository
          apt_repository:
            repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ dist }} stable'
            state: present
        - name: Docker > install packages
          apt:
            pkg:
              - docker
              - docker-compose
            state: latest
            update_cache: yes
        - name: Docker > update user groups
          user:
            name: '{{ ansible_user_id }}'
            groups: docker
            append: yes
      tags:
        - extra

    - name: btop
      block:
        - name: btop > check version
          command: btop --version
          register: cmd
          failed_when: '"1.2.13" not in cmd.stdout'
      rescue:
        - name: btop > install
          block:
            - name: btop > install snap
              become: yes
              snap:
                name: btop
          rescue:
            - name: btop > source > preflight
              file:
                path: /tmp/btop
                state: absent
            - name: btop > source > download
              unarchive:
                src: https://
                dest: /tmp/btop
            - name: btop > source > install
              command:
                chdir: /tmp/btop
                cmd: make install
            - name: btop > source > cleanup
              file:
                path: /tmp/btop
                state: absent
      tags:
        - tools

    - name: Just > install or update
      become: yes
      snap:
        name: just
        classic: yes
        channel: edge
      tags:
        - tools

    - name: Bazel
      block:
        - name: Bazel > add apt key
          become: yes
          apt_key:
            id: 71A1D0EFCFEB6281FD0437C93D5919B448457EE0
            url: https://bazel.build/bazel-release.pub.gpg
            state: present
        - name: Bazelisk
          block:
            - name: Bazel > Bazelisk > check presence
              file:
                path: /usr/bin/bazel
          rescue:
            - name: Bazel > Bazelisk > download
              become: yes
              get_url:
                url: https://github.com/bazelbuild/bazelisk/releases/download/v1.15.0/bazelisk-linux-amd64
                checksum: sha256:19fd84262d5ef0cb958bcf01ad79b528566d8fef07ca56906c5c516630a0220b
                dest: /usr/bin/bazel
                mode: '0755'
      tags:
        - tools

    - name: Go
      become: yes
      block:
        - name: Go > check version
          command: go version
          register: cmd
          changed_when: no
          failed_when: '"1.19.3" not in cmd.stdout'
      rescue:
        - name: Go > download and install
          become: yes
          unarchive:
            dest: /usr/local
            src: 'https://go.dev/dl/go1.19.3.{{ ansible_system|lower }}-amd64.tar.gz'
            remote_src: yes
      always:
        - name: Go > install or upgrade tools
          command: |
            goparallelinstall \
              github.com/davidrjenni/reftools/cmd/fillstruct@latest \
              github.com/go-delve/delve/cmd/dlv@latest \
              github.com/golang/mock/mockgen@latest \
              github.com/golangci/golangci-lint/cmd/golangci-lint@latest \
              github.com/mgechev/revive@latest \
              golang.org/x/perf/cmd/benchstat@latest \
              golang.org/x/tools/cmd/goimports@latest \
              golang.org/x/tools/go/analysis/passes/fieldalignment/cmd/fieldalignment@latest \
              golang.org/x/tools/gopls@latest \
              honnef.co/go/tools/cmd/staticcheck@latest \
              mvdan.cc/gofumpt@latest
          register: cmd
          changed_when: cmd.stdout | length > 0
      tags:
        - go
        - languages

    - name: Rust
      block:
        - name: Rust > check version
          command: cargo --version
          register: cmd
          changed_when: no
          failed_when: '"1.65.0" not in cmd.stdout'
      rescue:
        - name: Rust > preflight
          file:
            path: /tmp/rustup-init
            state: absent
        - name: Rust > download rustup-init
          get_url:
            url: https://sh.rustup.rs
            dest: /tmp/rustup-init
            mode: '0755'
        - name: Rust > run rustup-init
          become: yes
          command: /tmp/rustup-init -y --profile default
      always:
        - name: Rust > cleanup
          become: yes
          file:
            path: /tmp/rustup-init
            state: absent
      tags:
        - languages
        - rust

    - name: tmux
      block:
        - name: tmux > check version
          command: tmux -V
          register: cmd
          changed_when: no
          failed_when: '"3.3a" not in cmd.stdout'
      rescue:
        - name: tmux > preflight
          file:
            path: /tmp/tmux
            state: absent
        - name: tmux > clone
          git:
            repo: https://github.com/tmux/tmux.git
            version: 3.3a
            dest: /tmp/tmux
        - name: tmux > configure
          shell:
            chdir: /tmp/tmux
            cmd: ./autogen.sh && ./configure
        - name: tmux > build
          command:
            chdir: /tmp/tmux
            cmd: make
        - name: tmux > install
          become: yes
          command:
            chdir: /tmp/tmux
            cmd: make install
      always:
        - name: tmux > cleanup
          file:
            path: /tmp/tmux
            state: absent
      tags:
        - tools

    - name: Helix
      block:
        - name: Helix > check presence
          command: hx --version
          register: cmd
          changed_when: no
          failed_when: '"22.08.1" not in cmd.stdout'
      rescue:
        - name: Helix > preflight
          file:
            path: /tmp/helix
            state: absent
        - name: Helix > clone
          git:
            repo: https://github.com/helix-editor/helix
            version: 22.08.1
            dest: /tmp/helix
        - name: Helix > build and install
          command:
            cmd: cargo install --path helix-term
            chdir: /tmp/helix
      tags:
        - tools

    - name: Chezmoi
      block:
        - name: Chezmoi > install/update snap
          become: yes
          snap:
            name: chezmoi
            classic: yes
        - name: Chezmoi > clone
          block:
            - name: Chezmoi > clone dotfiles with ssh
              command: chezmoi init git@github.com:mway/dotfiles
              changed_when: no
          rescue:
            - name: Chezmoi > clone dotfiles with https
              command: chezmoi init https://github.com/mway/dotfiles
              changed_when: no
        - name: Chezmoi > check diff
          command: chezmoi diff
          register: cmd
          changed_when: cmd.stdout | length > 0
        - name: Chezmoi > apply
          shell:
            cmd: echo all-overwrite | chezmoi apply --force
          when: cmd.stdout | length > 0
      tags:
        - tools
