---
- hosts: all
  connection: ssh
  strategy: free
  gather_facts: yes

  vars_prompt:
    - name: vault_password
      prompt: "Enter 1Password vault password"

  vars:
    home: "{{ ansible_env.HOME }}"
    userbin: "{{ home }}/bin"
    gopath: "{{ home }}/go"
    gobin: "{{ gopath }}/bin"
    goroot: "{{ home }}/.local/go"
    gorootbin: "{{ goroot }}/bin"
    local: "{{ home }}/.local"
    localbin: "{{ local }}/bin"
    cargo: "{{ home }}/.cargo"
    cargobin: "{{ cargo }}/bin"

    versions:
      chezmoi: "2.33"
    # versions:
    #   rust: "1.68.2"
  #   ansible_os: "{{ lookup('lines', 'uname -s | tr \"[:upper:]\" \"[:lower:]\"') }}"
  #   dist: "{{ ansible_distribution_release }}"
  #   path: "{{ ansible_env.HOME }}/.cargo/bin:{{ ansible_env.HOME }}/go/bin:/usr/local/go/bin:{{ ansible_env.HOME }}/.local/bin:{{ ansible_env.HOME }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
  #   versions:
  #     bat: "0.22.1"
  #     btop: "1.2.13"
  #     chezmoi: "v2.33.0"
  #     go: "1.20.3"
  #     helix: "22.12"
  #     just: "1.13.0"
  #     tmux: "3.3a"

  environment:
    PATH: "{{ userbin }}:{{ cargobin }}:{{ gobin }}:{{ gorootbin }}:{{ localbin }}:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:{{ ansible_env.PATH }}"

  tasks:
    - name: "Ansible: docker"
      pip:
        name: docker
        state: latest
      when: "'personal' in group_names"
      tags:
        - devenv
        - personal
    - name: Configuration
      include_tasks: tasks/config.yaml
      tags:
        - chezmoi
        - config
        - devenv
        - dotfiles
        - personal
        - ssh
    - name: Core
      include_tasks: tasks/core.yaml
      tags:
        - core
        - devenv
        - go
        - mw
        - personal
        - rust
    - name: Tools
      include_tasks: tasks/tools.yaml
      tags:
        - devenv
        - tools
        - packages
    - name: Services
      include_tasks: tasks/services.yaml
      tags:
        - grafana
        - loki
        - node-exporter
        - obs
        - observability
        - pi-hole
        - promtail
        - services
        - victoria-metrics

    # - name: node-exporter
    #   community.docker.docker_container:
    #     image: quay.io/prometheus/node-exporter
    #     name: node-exporter
    #     command: --path.rootfs=/host
    #     network_mode: host
    #     pid_mode: host
    #     volumes:
    #       - /:/host:ro,rslave
    #     detach: true
    #     auto_remove: true

    # terraform script for containers?
    # then install (if needed) and run tf? or just use ansible?
  
    # - name: Configuration
    #   become: yes
    #   block:
    #     - name: Config > copy tools
    #       copy:
    #         src: usr_local_bin/
    #         dest: /usr/local/bin/
    #         mode: preserve
    #   tags:
    #     - base
    #     - config

    # - name: Environment
    #   become: yes
    #   block:
    #     - name: /etc/profile.d/zz_mway_paths.sh
    #       copy:
    #         dest: /etc/profile.d/zz_mway_paths.sh
    #         content: |
    #           export PATH="{{ path }}"
    #         owner: root
    #         group: root
    #         mode: "0755"
    #   tags:
    #     - base
    #     - config

    # - name: apt > install/update packages
    #   become: yes
    #   apt:
    #     pkg:
    #       # General
    #       - build-essential
    #       - clang-13
    #       - clang-format-13
    #       - cmake
    #       - cron
    #       - curl
    #       - exa
    #       - fasd
    #       - git
    #       - jq
    #       - lcov
    #       - libssl-dev
    #       - libssl3
    #       - libtool-bin
    #       - ninja-build
    #       - openssl
    #       - pandoc
    #       - pipenv
    #       - pipx
    #       - pv
    #       - python3
    #       - ripgrep
    #       - shellcheck
    #       - silversearcher-ag
    #       - snapd
    #       - stow
    #       - tig
    #       # Docker
    #       - apt-transport-https
    #       - ca-certificates
    #       - software-properties-common
    #     state: latest
    #     allow_unauthenticated: yes
    #     install_recommends: yes
    #     update_cache: yes
    #     autoremove: yes
    #   tags:
    #     - base
    #     - config
    #     - packages

    # - name: btop
    #   block:
    #     - name: btop > check version
    #       command: btop --version
    #       register: cmd
    #       changed_when: no
    #       failed_when: versions.btop not in cmd.stdout
    #   rescue:
    #     - name: btop > install
    #       block:
    #         - name: btop > install snap
    #           become: yes
    #           snap:
    #             name: btop
    #       rescue:
    #         - name: btop > source > preflight
    #           shell:
    #             cmd: rm -rf /tmp/btop && mkdir -p /tmp/btop
    #           changed_when: no
    #         - name: btop > source > download
    #           unarchive:
    #             src: "https://github.com/aristocratos/btop/releases/download/v1.2.13/btop-{{ ansible_architecture }}-{{ ansible_system|lower }}-musl.tbz"
    #             dest: /tmp/btop
    #             remote_src: yes
    #         - name: btop > source > install
    #           become: yes
    #           command:
    #             chdir: /tmp/btop/btop
    #             cmd: make install
    #       always:
    #         - name: btop > source > cleanup
    #           file:
    #             path: /tmp/btop
    #             state: absent
    #   tags:
    #     - base
    #     - btop
    #     - tools

    # - name: Just
    #   block:
    #     - name: Just > check version
    #       command: just --version
    #       register: cmd
    #       changed_when: no
    #       failed_when: versions.just not in cmd.stdout
    #   rescue:
    #     - name: Just > install
    #       become: yes
    #       unarchive:
    #         src: "https://github.com/casey/just/releases/download/{{ versions.just }}/just-{{ versions.just }}-{{ ansible_architecture }}-unknown-{{ ansible_system|lower }}-musl.tar.gz"
    #         dest: /usr/local/bin/
    #         remote_src: yes
    #         include:
    #           - just
    #         mode: "0755"
    #   tags:
    #     - base
    #     - just
    #     - tools
  
    # - name: bat
    #   become: yes
    #   apt:
    #     deb: "https://github.com/sharkdp/bat/releases/download/v{{ versions.bat }}/bat-musl_{{ versions.bat }}_amd64.deb"
    #   tags:
    #     - base
    #     - bat
    #     - tools

    # - name: Bazel
    #   block:
    #     - name: Bazelisk
    #       block:
    #         - name: Bazel > Bazelisk > check presence
    #           file:
    #             path: /usr/bin/bazel
    #       rescue:
    #         - name: Bazel > Bazelisk > download
    #           become: yes
    #           get_url:
    #             url: https://github.com/bazelbuild/bazelisk/releases/download/v1.15.0/bazelisk-linux-amd64
    #             checksum: sha256:19fd84262d5ef0cb958bcf01ad79b528566d8fef07ca56906c5c516630a0220b
    #             dest: /usr/bin/bazel
    #             mode: "0755"
    #   tags:
    #     - base
    #     - bazel
    #     - tools

    # - name: Go
    #   become: yes
    #   block:
    #     - name: Go > check version
    #       command: go version
    #       register: cmd
    #       changed_when: no
    #       failed_when: versions.go not in cmd.stdout
    #   rescue:
    #     - name: Go > download and install
    #       become: yes
    #       unarchive:
    #         dest: /usr/local
    #         src: "https://go.dev/dl/go{{ versions.go }}.{{ ansible_system|lower }}-amd64.tar.gz"
    #         remote_src: yes
    #   always:
    #     - name: Go > install or upgrade tools
    #       command: |
    #         goparallelinstall \
    #           github.com/davidrjenni/reftools/cmd/fillstruct@latest \
    #           github.com/go-delve/delve/cmd/dlv@latest \
    #           github.com/golang/mock/mockgen@latest \
    #           github.com/golangci/golangci-lint/cmd/golangci-lint@latest \
    #           github.com/mgechev/revive@latest \
    #           golang.org/x/perf/cmd/benchstat@latest \
    #           golang.org/x/tools/cmd/goimports@latest \
    #           golang.org/x/tools/go/analysis/passes/fieldalignment/cmd/fieldalignment@latest \
    #           golang.org/x/tools/gopls@latest \
    #           honnef.co/go/tools/cmd/staticcheck@latest \
    #           mvdan.cc/gofumpt@latest
    #       register: cmd
    #       changed_when: cmd.stdout | length > 0
    #   tags:
    #     - base
    #     - go
    #     - languages

    # - name: Rust
    #   block:
    #     - name: Rust > check version
    #       shell:
    #         cmd: cargo --version
    #       register: cmd
    #       changed_when: no
    #       failed_when: versions.rust not in cmd.stdout
    #   rescue:
    #     - name: Rust > update/install
    #       block:
    #         - name: Rust > update
    #           command: rustup update
    #       rescue:
    #         - name: Rust > preflight
    #           file:
    #             path: /tmp/rustup-init
    #             state: absent
    #         - name: Rust > download rustup-init
    #           get_url:
    #             url: https://sh.rustup.rs
    #             dest: /tmp/rustup-init
    #             mode: "0755"
    #         - name: Rust > run rustup-init
    #           become: yes
    #           shell:
    #             cmd: /tmp/rustup-init -y --profile default
    #   always:
    #     - name: Rust > cleanup
    #       become: yes
    #       file:
    #         path: /tmp/rustup-init
    #         state: absent
    #   tags:
    #     - base
    #     - languages
    #     - rust

    # - name: Helix
    #   block:
    #     - name: Helix > check version
    #       shell:
    #         cmd: hx --version
    #       register: cmd
    #       changed_when: no
    #       failed_when: versions.helix not in cmd.stdout
    #   rescue:
    #     - name: Helix > preflight
    #       file:
    #         path: /tmp/helix
    #         state: absent
    #     - name: Helix > clone
    #       git:
    #         repo: https://github.com/helix-editor/helix
    #         version: "{{ versions.helix }}"
    #         dest: /tmp/helix
    #     - name: Helix > build and install
    #       shell:
    #         chdir: /tmp/helix
    #         cmd: cargo install --locked --path helix-term
    #   tags:
    #     - base
    #     - helix
    #     - tools

    # - name: Chezmoi
    #   block:
    #     - name: Chezmoi > check version
    #       command: chezmoi --version
    #       register: cmd
    #       changed_when: no
    #       failed_when: versions.chezmoi not in cmd.stdout
    #   rescue:
    #     - name: Chezmoi > install
    #       shell:
    #         cmd: sh -c "$(curl -fsLS chezmoi.io/get)"
    #   always:
    #     - name: Chezmoi > clone
    #       block:
    #         - name: Chezmoi > clone methods
    #           block:
    #             - name: Chezmoi > clone dotfiles with ssh
    #               command: chezmoi init git@github.com:mway/dotfiles
    #               register: cmd
    #               changed_when: cmd.stdout | length > 0
    #           rescue:
    #             - name: Chezmoi > clone dotfiles with https
    #               command: chezmoi init https://github.com/mway/dotfiles
    #               register: cmd
    #               changed_when: cmd.stdout | length > 0
    #     - name: Chezmoi > update and apply
    #       shell:
    #         cmd: echo all-overwrite | chezmoi update --init --force
    #       register: cmd
    #       changed_when: cmd.stdout | length > 0 and 'up to date' not in cmd.stdout
    #   tags:
    #     - base
    #     - chezmoi
    #     - tools

    # - name: Docker
    #   become: yes
    #   block:
    #     - name: Docker > add apt key
    #       apt_key:
    #         url: https://download.docker.com/linux/ubuntu/gpg
    #         id: 0EBFCD88
    #     - name: Docker > add apt repository
    #       apt_repository:
    #         repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ dist }} stable"
    #         state: present
    #     - name: Docker > install packages
    #       apt:
    #         pkg:
    #           - docker
    #           - docker-compose
    #         state: latest
    #         update_cache: yes
    #     - name: Docker > update user groups
    #       user:
    #         name: "{{ ansible_user_id }}"
    #         groups: docker
    #         append: yes
    #   tags:
    #     - extra

    # - name: Tailscale
    #   block:
    #     - name: Tailscale > add apt key
    #       become: yes
    #       get_url:
    #         url: "https://pkgs.tailscale.com/stable/ubuntu/{{ dist }}.noarmor.gpg"
    #         checksum: sha256:3e03dacf222698c60b8e2f990b809ca1b3e104de127767864284e6c228f1fb39
    #         dest: /usr/share/keyrings/tailscale-archive-keyring.gpg
    #     - name: Tailscale > add apt sources
    #       become: yes
    #       get_url:
    #         url: "https://pkgs.tailscale.com/stable/ubuntu/{{ dist }}.tailscale-keyring.list"
    #         checksum: sha256:e0acc200aebb45a3d67b4b66524100f8c1f4497866958654798fc4ba09d49f3f
    #         dest: /etc/apt/sources.list.d/tailscale.list
    #     - name: Tailscale > install or update
    #       become: yes
    #       apt:
    #         pkg:
    #           - tailscale
    #         state: latest
    #         update_cache: yes
    #   tags:
    #     - docker
    #     - extra

    # - name: NextDNS
    #   block:
    #     - name: NextDNS > check presence
    #       command: nextdns version
    #       changed_when: no
    #   rescue:
    #     - name: NextDNS > preflight
    #       file:
    #         path: /tmp/nextdns-install
    #         state: absent
    #     - name: NextDNS > download
    #       get_url:
    #         url: https://nextdns.io/install
    #         dest: /tmp/nextdns-install
    #         mode: "0755"
    #     - name: NextDNS > install
    #       shell: echo | /tmp/nextdns-install
    #   always:
    #     - name: NextDNS > cleanup
    #       file:
    #         path: /tmp/nextdns-install
    #         state: absent
    #   tags:
    #     - extra
    #     - nextdns

    # - name: dnsmasq
    #   block:
    #     - name: dnsmasq > install or update
    #       become: yes
    #       apt:
    #         pkg:
    #           - dnsmasq
    #           - dnsmasq-utils
    #   tags:
    #     - dnsmasq
    #     - extra
