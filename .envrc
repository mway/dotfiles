#!/usr/bin/env bash

_envrc() {
  local readlink="readlink -f"
  if [ ! $($readlink . 2>/dev/null) ]; then
    readlink="readlink"
  fi

  # Work around BSD readlink
  local FILE="$($readlink ${BASH_SOURCE[0]})"
  [ -n "${FILE}" ] || FILE="${BASH_SOURCE[0]}"

  local DIR="$(cd "$(dirname "${FILE}")" && pwd)"

  [ -s "${DIR}/env/helpers" ] && source "${DIR}/env/helpers"
  [ -s "${DIR}/env/aliases" ] && source "${DIR}/env/aliases"
  [ -s "${DIR}/env/config" ] && source "${DIR}/env/config"
  [ -s "${DIR}/env/exports" ] && source "${DIR}/env/exports"
  [ -s "${DIR}/env/funcs" ] && source "${DIR}/env/funcs"

  source "${DIR}/env/scripts/ssh.sh"

  # local goroot="$(go env 2>&1 | grep GOROOT | cut -d= -f2 | sed -e 's/^"//' -e 's/"$//')"
  # local goroot_bin="${goroot}/bin"
  # if [ -n "${goroot}" ]; then
  #   export GOROOT="${goroot}"
  #   path_prepend "${GOROOT}/bin"
  # fi

  local gopath="$(go env 2>&1 | grep GOPATH | cut -d= -f2 | sed -e 's/^"//' -e 's/"$//')"
  if [ -n "${gopath}" ]; then
    export GOPATH="${gopath}"

    local gobin="$(go env 2>&1 2>&1 | grep GOBIN | cut -d= -f2 | sed -e 's/^"//' -e 's/"$//')"
    [ -n "${gobin}" ] || gobin="${GOPATH}/bin"

    export GOBIN="${gobin}"
    path_prepend "${GOBIN}"
  fi

  # Common lookups
  [ ! -d /usr/local/bin ] || path_prepend /usr/local/bin
  [ ! -d /usr/local/sbin ] || path_prepend /usr/local/sbin

  # Homebrew
  if [ -n "$PATH_HOMEBREW" ]; then
    [ -d "${PATH_HOMEBREW}/sbin" ] && { path_prepend "${PATH_HOMEBREW}/sbin" ;}
    [ -d "${PATH_HOMEBREW}/bin" ] && { path_prepend "${PATH_HOMEBREW}/bin" ;}
    type "brew" &>/dev/null && {
      [ -s "$PATH_HOMEBREW/etc/bash_completion" ] && . "$PATH_HOMEBREW/etc/bash_completion"
    }
  fi

  # Python
  if [ -d "${HOME}/.pyenv" ]; then
    export PYENV_ROOT="${HOME}/.pyenv"
    path_prepend "${PYENV_ROOT}/bin"
    path_prepend "${PYENV_ROOT}/shims"
  fi

  # Virtualenv
  local venvsh="$(which virtualenvwrapper.sh 2>/dev/null)"
  if [ -n "$venvsh" ]; then
    source "${venvsh}"
  fi

  # Rbenv
  if which rbenv &>/dev/null; then
    eval "$(rbenv init -)"
  fi

  # nvenv
  export NVM_DIR="$HOME/.nvm"
  if [ -d "${NVM_DIR}" ]; then
     [ -f "/usr/local/opt/nvm/nvm.sh" ] && source "/usr/local/opt/nvm/nvm.sh"
  fi

  # User bin
  [ ! -d "${HOME}/bin" ] || path_prepend "${HOME}/bin"
}

_envrc $@

